{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sambh\\\\OneDrive\\\\Desktop\\\\Exam-Portal\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\n// // // import React from \"react\";\n// // import React, { useState } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import TextField from \"@material-ui/core/TextField\";\n// // import Button from \"@material-ui/core/Button\";\n\n// // const LoginAdminForm = () => {\n// //   const navigate = useNavigate();\n// //   const [username, setUsername] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n\n// //   const handleAdminLogInClick = (e) => {\n// //     e.preventDefault();\n// //     if (username === \"student\" && password === \"student\") {\n// //       navigate(\"/students\");\n// //     } else {\n// //       alert(\"Invalid Admin credentials\");\n// //     }\n// //   };\n\n// //   return (\n// //     <form onSubmit={handleAdminLogInClick}>\n// //       <TextField\n// //         label=\"username\"\n// //         variant=\"outlined\"\n// //         value={username}\n// //         onChange={(e) => setUsername(e.target.value)}\n// //       />\n// //       <TextField\n// //         label=\"password\"\n// //         variant=\"outlined\"\n// //         type=\"password\"\n// //         onChange={(e) => setPassword(e.target.value)}\n// //       />\n// //       <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n// //         Login\n// //       </Button>\n// //     </form>\n// //   );\n// // };\n\n// // export default LoginAdminForm;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { Container, Typography, TextField, Button } from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\n// const useStyles = makeStyles((theme) => ({\n//   container: {\n//     marginTop: theme.spacing(8),\n//     marginBottom: theme.spacing(8),\n//   },\n//   form: {\n//     marginTop: theme.spacing(2),\n//   },\n//   submitButton: {\n//     marginTop: theme.spacing(2),\n//   },\n//   registerLink: {\n//     marginTop: theme.spacing(2),\n//   },\n//   errorText: {\n//     color: \"red\",\n//     marginTop: theme.spacing(1),\n//   },\n// }));\n\n// const StudentLoginForm = () => {\n//   const classes = useStyles();\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     username: \"\",\n//     password: \"\",\n//   });\n//   const [autoFillUsername, setAutoFillUsername] = useState(\"\");\n//   const [autoFillPassword, setAutoFillPassword] = useState(\"\");\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const usernameRef = useRef(null);\n//   const passwordRef = useRef(null);\n\n//   useEffect(() => {\n//     const storedUsername = localStorage.getItem(\"studentUsername\");\n//     const storedPassword = localStorage.getItem(\"studentPassword\");\n//     if (storedUsername && storedPassword) {\n//       setFormData({\n//         username: storedUsername,\n//         password: storedPassword,\n//       });\n//       setAutoFillUsername(storedUsername);\n//       setAutoFillPassword(storedPassword);\n//     }\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevFormData) => ({\n//       ...prevFormData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (formData.username === \"student\" && formData.password === \"student\") {\n//       navigate(\"/student/dashboard\");\n//     } else {\n//       setErrorMessage(\"Invalid username or password\");\n//     }\n//   };\n\n//   const handleUsernameFocus = () => {\n//     usernameRef.current.value = autoFillUsername;\n//     passwordRef.current.value = autoFillPassword;\n//   };\n\n//   return (\n//     <Container maxWidth=\"xs\" className={classes.container}>\n//       <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//         Student Login\n//       </Typography>\n//       <form onSubmit={handleSubmit} className={classes.form}>\n//         <TextField\n//           label=\"Username\"\n//           fullWidth\n//           name=\"username\"\n//           value={formData.username}\n//           onChange={handleChange}\n//           margin=\"normal\"\n//           inputRef={usernameRef}\n//           onFocus={handleUsernameFocus}\n//         />\n//         <TextField\n//           label=\"Password\"\n//           fullWidth\n//           name=\"password\"\n//           type=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           margin=\"normal\"\n//           inputRef={passwordRef}\n//           onFocus={handleUsernameFocus}\n//         />\n//         <Button\n//           type=\"submit\"\n//           variant=\"contained\"\n//           color=\"primary\"\n//           fullWidth\n//           className={classes.submitButton}\n//         >\n//           Login\n//         </Button>\n//         {errorMessage && (\n//           <Typography variant=\"body1\" align=\"center\" className={classes.errorText}>\n//             {errorMessage}\n//           </Typography>\n//         )}\n//       </form>\n//       <Typography variant=\"body1\" align=\"center\" className={classes.registerLink}>\n//         New student?{\" \"}\n//         <Link to=\"/StudentRegistrationForm\">\n//           Register\n//         </Link>\n//       </Typography>\n//     </Container>\n//   );\n// };\n\n// export default StudentLoginForm;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Container, Typography, TextField, Button, Paper, Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(8)\n  },\n  form: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(4)\n  },\n  submitButton: {\n    marginTop: theme.spacing(2)\n  },\n  registerLink: {\n    marginTop: theme.spacing(2)\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\nconst StudentLoginForm = () => {\n  _s();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [autoFillUsername, setAutoFillUsername] = useState(\"\");\n  const [autoFillPassword, setAutoFillPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const usernameRef = useRef(null);\n  const passwordRef = useRef(null);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"studentUsername\");\n    const storedPassword = localStorage.getItem(\"studentPassword\");\n    if (storedUsername && storedPassword) {\n      setFormData({\n        username: storedUsername,\n        password: storedPassword\n      });\n      setAutoFillUsername(storedUsername);\n      setAutoFillPassword(storedPassword);\n    }\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const storedUsername = localStorage.getItem(\"studentUsername\");\n    const storedPassword = localStorage.getItem(\"studentPassword\");\n    if (formData.username === storedUsername && formData.password === storedPassword) {\n      navigate(\"/student/dashboard\");\n    } else {\n      setErrorMessage(\"Invalid username or password\");\n    }\n  };\n  const handleUsernameFocus = () => {\n    usernameRef.current.value = autoFillUsername;\n    passwordRef.current.value = autoFillPassword;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Student Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          fullWidth: true,\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          margin: \"normal\",\n          inputRef: usernameRef,\n          onFocus: handleUsernameFocus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          fullWidth: true,\n          name: \"password\",\n          type: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          margin: \"normal\",\n          inputRef: passwordRef,\n          onFocus: handleUsernameFocus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          className: classes.submitButton,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          className: classes.errorText,\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        className: classes.registerLink,\n        children: [\"New student?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/StudentRegistrationForm\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentLoginForm, \"8V2ZgXMZBIiU7F3kKemtEtKclBo=\", false, function () {\n  return [useStyles, useNavigate];\n});\n_c = StudentLoginForm;\nexport default StudentLoginForm;\nvar _c;\n$RefreshReg$(_c, \"StudentLoginForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","Container","Typography","TextField","Button","Paper","Avatar","makeStyles","LockOutlinedIcon","jsxDEV","_jsxDEV","useStyles","theme","container","marginTop","spacing","marginBottom","form","display","flexDirection","alignItems","padding","submitButton","registerLink","errorText","color","avatar","margin","backgroundColor","palette","secondary","main","StudentLoginForm","_s","classes","navigate","formData","setFormData","username","password","autoFillUsername","setAutoFillUsername","autoFillPassword","setAutoFillPassword","errorMessage","setErrorMessage","usernameRef","passwordRef","storedUsername","localStorage","getItem","storedPassword","handleChange","e","name","value","target","prevFormData","handleSubmit","preventDefault","handleUsernameFocus","current","maxWidth","className","children","elevation","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","gutterBottom","onSubmit","label","fullWidth","onChange","inputRef","onFocus","type","to","_c","$RefreshReg$"],"sources":["C:/Users/sambh/OneDrive/Desktop/Exam-Portal/src/components/LoginForm.js"],"sourcesContent":["// // // import React from \"react\";\r\n// // import React, { useState } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import TextField from \"@material-ui/core/TextField\";\r\n// // import Button from \"@material-ui/core/Button\";\r\n\r\n// // const LoginAdminForm = () => {\r\n// //   const navigate = useNavigate();\r\n// //   const [username, setUsername] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n\r\n// //   const handleAdminLogInClick = (e) => {\r\n// //     e.preventDefault();\r\n// //     if (username === \"student\" && password === \"student\") {\r\n// //       navigate(\"/students\");\r\n// //     } else {\r\n// //       alert(\"Invalid Admin credentials\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <form onSubmit={handleAdminLogInClick}>\r\n// //       <TextField\r\n// //         label=\"username\"\r\n// //         variant=\"outlined\"\r\n// //         value={username}\r\n// //         onChange={(e) => setUsername(e.target.value)}\r\n// //       />\r\n// //       <TextField\r\n// //         label=\"password\"\r\n// //         variant=\"outlined\"\r\n// //         type=\"password\"\r\n// //         onChange={(e) => setPassword(e.target.value)}\r\n// //       />\r\n// //       <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n// //         Login\r\n// //       </Button>\r\n// //     </form>\r\n// //   );\r\n// // };\r\n\r\n// // export default LoginAdminForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { Container, Typography, TextField, Button } from \"@material-ui/core\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   container: {\r\n//     marginTop: theme.spacing(8),\r\n//     marginBottom: theme.spacing(8),\r\n//   },\r\n//   form: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n//   submitButton: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n//   registerLink: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n//   errorText: {\r\n//     color: \"red\",\r\n//     marginTop: theme.spacing(1),\r\n//   },\r\n// }));\r\n\r\n// const StudentLoginForm = () => {\r\n//   const classes = useStyles();\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     username: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const [autoFillUsername, setAutoFillUsername] = useState(\"\");\r\n//   const [autoFillPassword, setAutoFillPassword] = useState(\"\");\r\n//   const [errorMessage, setErrorMessage] = useState(\"\");\r\n//   const usernameRef = useRef(null);\r\n//   const passwordRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const storedUsername = localStorage.getItem(\"studentUsername\");\r\n//     const storedPassword = localStorage.getItem(\"studentPassword\");\r\n//     if (storedUsername && storedPassword) {\r\n//       setFormData({\r\n//         username: storedUsername,\r\n//         password: storedPassword,\r\n//       });\r\n//       setAutoFillUsername(storedUsername);\r\n//       setAutoFillPassword(storedPassword);\r\n//     }\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prevFormData) => ({\r\n//       ...prevFormData,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (formData.username === \"student\" && formData.password === \"student\") {\r\n//       navigate(\"/student/dashboard\");\r\n//     } else {\r\n//       setErrorMessage(\"Invalid username or password\");\r\n//     }\r\n//   };\r\n\r\n//   const handleUsernameFocus = () => {\r\n//     usernameRef.current.value = autoFillUsername;\r\n//     passwordRef.current.value = autoFillPassword;\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"xs\" className={classes.container}>\r\n//       <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n//         Student Login\r\n//       </Typography>\r\n//       <form onSubmit={handleSubmit} className={classes.form}>\r\n//         <TextField\r\n//           label=\"Username\"\r\n//           fullWidth\r\n//           name=\"username\"\r\n//           value={formData.username}\r\n//           onChange={handleChange}\r\n//           margin=\"normal\"\r\n//           inputRef={usernameRef}\r\n//           onFocus={handleUsernameFocus}\r\n//         />\r\n//         <TextField\r\n//           label=\"Password\"\r\n//           fullWidth\r\n//           name=\"password\"\r\n//           type=\"password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           margin=\"normal\"\r\n//           inputRef={passwordRef}\r\n//           onFocus={handleUsernameFocus}\r\n//         />\r\n//         <Button\r\n//           type=\"submit\"\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           fullWidth\r\n//           className={classes.submitButton}\r\n//         >\r\n//           Login\r\n//         </Button>\r\n//         {errorMessage && (\r\n//           <Typography variant=\"body1\" align=\"center\" className={classes.errorText}>\r\n//             {errorMessage}\r\n//           </Typography>\r\n//         )}\r\n//       </form>\r\n//       <Typography variant=\"body1\" align=\"center\" className={classes.registerLink}>\r\n//         New student?{\" \"}\r\n//         <Link to=\"/StudentRegistrationForm\">\r\n//           Register\r\n//         </Link>\r\n//       </Typography>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default StudentLoginForm;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Container, Typography, TextField, Button, Paper, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(4),\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  registerLink: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst StudentLoginForm = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [autoFillUsername, setAutoFillUsername] = useState(\"\");\r\n  const [autoFillPassword, setAutoFillPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem(\"studentUsername\");\r\n    const storedPassword = localStorage.getItem(\"studentPassword\");\r\n    if (storedUsername && storedPassword) {\r\n      setFormData({\r\n        username: storedUsername,\r\n        password: storedPassword,\r\n      });\r\n      setAutoFillUsername(storedUsername);\r\n      setAutoFillPassword(storedPassword);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const storedUsername = localStorage.getItem(\"studentUsername\");\r\n    const storedPassword = localStorage.getItem(\"studentPassword\");\r\n    if (formData.username === storedUsername && formData.password === storedPassword) {\r\n      navigate(\"/student/dashboard\");\r\n    } else {\r\n      setErrorMessage(\"Invalid username or password\");\r\n    }\r\n  };\r\n\r\n  const handleUsernameFocus = () => {\r\n    usernameRef.current.value = autoFillUsername;\r\n    passwordRef.current.value = autoFillPassword;\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\" className={classes.container}>\r\n      <Paper elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Student Login\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form}>\r\n          <TextField\r\n            label=\"Username\"\r\n            fullWidth\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            inputRef={usernameRef}\r\n            onFocus={handleUsernameFocus}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            fullWidth\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            inputRef={passwordRef}\r\n            onFocus={handleUsernameFocus}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            className={classes.submitButton}\r\n          >\r\n            Login\r\n          </Button>\r\n          {errorMessage && (\r\n            <Typography variant=\"body1\" align=\"center\" className={classes.errorText}>\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n        </form>\r\n        <Typography variant=\"body1\" align=\"center\" className={classes.registerLink}>\r\n          New student?{\" \"}\r\n          <Link to=\"/StudentRegistrationForm\">\r\n            Register\r\n          </Link>\r\n        </Typography>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StudentLoginForm;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,mBAAmB;AAC3F,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,gBAAgB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAK,KAAM;EACvCC,SAAS,EAAE;IACTC,SAAS,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;IAC3BC,YAAY,EAAEJ,KAAK,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}