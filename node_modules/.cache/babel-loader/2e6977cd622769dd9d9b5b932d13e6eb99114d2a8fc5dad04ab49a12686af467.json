{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sambh\\\\OneDrive\\\\Desktop\\\\Exam-Portal\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { Container, Grid, Card, CardContent, Typography, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, Drawer } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  tableContainer: {\n    marginTop: theme.spacing(3)\n  },\n  card: {\n    height: '100%'\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n}));\nconst AdminDashboard = () => {\n  _s();\n  const classes = useStyles();\n\n  // Dummy data for table\n  const students = [{\n    id: 1,\n    name: 'John Doe',\n    age: 25,\n    grade: 'A'\n  }, {\n    id: 2,\n    name: 'Jane Smith',\n    age: 22,\n    grade: 'B'\n  }, {\n    id: 3,\n    name: 'Mark Johnson',\n    age: 21,\n    grade: 'C'\n  }, {\n    id: 4,\n    name: 'Anna Brown',\n    age: 24,\n    grade: 'A'\n  }];\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onMenuClick: toggleSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: sidebarOpen,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              className: classes.tableContainer,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Age\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Grade\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: students.map(student => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: student.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: student.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: student.age\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: student.grade\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 25\n                    }, this)]\n                  }, student.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.card,\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                className: classes.cardContent,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"Total Exams\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    children: \"10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"I30SNdbwbWxQ+9viA1czHT5WKY0=\", false, function () {\n  return [useStyles];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\n\n// // import React, { useState } from 'react';\n// // import { makeStyles } from '@material-ui/core/styles';\n// // import Sidebar from './Sidebar';\n// // import Header from './Header';\n// // import Footer from './Footer';\n// // import { Container, Grid, Card, CardContent, Typography, Table, TableContainer, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\n\n// // const useStyles = makeStyles((theme) => ({\n// // root: {\n// // display: 'flex',\n// // },\n// // content: {\n// // flexGrow: 1,\n// // padding: theme.spacing(3),\n// // },\n// // tableContainer: {\n// // marginTop: theme.spacing(3),\n// // },\n// // card: {\n// // height: '100%',\n// // },\n// // cardContent: {\n// // display: 'flex',\n// // justifyContent: 'space-between',\n// // },\n// // }));\n\n// // const AdminDashboard = () => {\n// // const classes = useStyles();\n\n// // // Dummy data for table\n// // const students = [ { id: 1, name: 'John Doe', age: 25, grade: 'A' }, { id: 2, name: 'Jane Smith', age: 22, grade: 'B' }, { id: 3, name: 'Mark Johnson', age: 21, grade: 'C' }, { id: 4, name: 'Anna Brown', age: 24, grade: 'A' }, ];\n\n// // const [sidebarOpen, setSidebarOpen] = useState(false);\n\n// // const toggleSidebar = () => {\n// // setSidebarOpen(!sidebarOpen);\n// // };\n\n// // return (\n// // <div className={classes.root}>\n// // <Header onMenuClick={toggleSidebar} />\n// // <Sidebar open={sidebarOpen} />\n// // <div className={classes.content}>\n// // <Container>\n// // <Grid container spacing={3}>\n// // <Grid item xs={12} md={8}>\n// // {/* Table to display students /}\n// // <TableContainer className={classes.tableContainer}>\n// // <Table>\n// // <TableHead>\n// // <TableRow>\n// // <TableCell>ID</TableCell>\n// // <TableCell>Name</TableCell>\n// // <TableCell>Age</TableCell>\n// // <TableCell>Grade</TableCell>\n// // </TableRow>\n// // </TableHead>\n// // <TableBody>\n// // {students.map((student) => (\n// // <TableRow key={student.id}>\n// // <TableCell>{student.id}</TableCell>\n// // <TableCell>{student.name}</TableCell>\n// // <TableCell>{student.age}</TableCell>\n// // <TableCell>{student.grade}</TableCell>\n// // </TableRow>\n// // ))}\n// // </TableBody>\n// // </Table>\n// // </TableContainer>\n// // </Grid>\n// // <Grid item xs={12} md={4}>\n// // {/ Cards to show additional information */}\n// // <Card className={classes.card}>\n// // <CardContent className={classes.cardContent}>\n// // <div>\n// // <Typography variant=\"h6\">Total Students</Typography>\n// // <Typography variant=\"h4\">100</Typography>\n// // </div>\n// // <div>\n// // <Typography variant=\"h6\">Total Exams</Typography>\n// // <Typography variant=\"h4\">10</Typography>\n// // </div>\n// // </CardContent>\n// // </Card>\n// // </Grid>\n// // </Grid>\n// // </Container>\n// // <Footer />\n// // </div>\n// // </div>\n// // );\n// // };\n\n// // export default AdminDashboard;\n\n// // import React, { useEffect, useState } from \"react\";\n// // import { makeStyles } from \"@material-ui/core/styles\";\n// // import {\n// //   Card,\n// //   CardContent,\n// //   Typography,\n// //   Grid,\n// //   CircularProgress,\n// // } from \"@material-ui/core\";\n\n// // const useStyles = makeStyles((theme) => ({\n// //   root: {\n// //     flexGrow: 1,\n// //     marginTop: theme.spacing(4),\n// //   },\n// //   card: {\n// //     height: \"100%\",\n// //   },\n// //   cardContent: {\n// //     textAlign: \"center\",\n// //   },\n// // }));\n\n// // const AdminDashboard = () => {\n// //   const classes = useStyles();\n// //   const [isLoading, setIsLoading] = useState(true);\n// //   const [enrollmentCount, setEnrollmentCount] = useState(0);\n// //   const [questionSetCount, setQuestionSetCount] = useState(0);\n// //   const [upcomingExam, setUpcomingExam] = useState(\"\");\n// //   const [passCount, setPassCount] = useState(0);\n// //   const [failCount, setFailCount] = useState(0);\n// //   const [totalCount, setTotalCount] = useState(0);\n\n// //   useEffect(() => {\n// //     // Fetch all the necessary data from the server and update the state\n// //     const fetchDashboardData = async () => {\n// //       try {\n// //         // Example endpoint URLs\n// //         const enrollmentCountRes = await fetch(\"/api/enrollment/count\");\n// //         const enrollmentCountJson = await enrollmentCountRes.json();\n// //         setEnrollmentCount(enrollmentCountJson.count);\n\n// //         const questionSetCountRes = await fetch(\"/api/questionset/count\");\n// //         const questionSetCountJson = await questionSetCountRes.json();\n// //         setQuestionSetCount(questionSetCountJson.count);\n\n// //         const upcomingExamRes = await fetch(\"/api/exam/upcoming\");\n// //         const upcomingExamJson = await upcomingExamRes.json();\n// //         setUpcomingExam(upcomingExamJson.examDate);\n\n// //         const examResultsRes = await fetch(\"/api/exam/results\");\n// //         const examResultsJson = await examResultsRes.json();\n// //         setPassCount(examResultsJson.passCount);\n// //         setFailCount(examResultsJson.failCount);\n// //         setTotalCount(examResultsJson.totalCount);\n\n// //         setIsLoading(false);\n// //       } catch (err) {\n// //         console.error(err);\n// //       }\n// //     };\n\n// //     fetchDashboardData();\n// //   }, []);\n\n// //   if (isLoading) {\n// //     return <CircularProgress />;\n// //   } else {\n// //     return (\n// //       <Grid container spacing={4}>\n// //         <Grid item xs={12} sm={6} md={3}>\n// //           <Card className={classes.card}>\n// //             <CardContent className={classes.cardContent}>\n// //               <Typography color=\"textSecondary\" variant=\"h6\" gutterBottom>\n// //                 Enrollment Count\n// //               </Typography>\n// //               <Typography color=\"primary\" variant=\"h4\">\n// //                 {enrollmentCount}\n// //               </Typography>\n// //             </CardContent>\n// //           </Card>\n// //         </Grid>\n// //         <Grid item xs={12} sm={6} md={3}>\n// //           <Card className={classes.card}>\n// //             <CardContent className={classes.cardContent}>\n// //               <Typography color=\"textSecondary\" variant=\"h6\" gutterBottom>\n// //                 Question Set Count\n// //               </Typography>\n// //               <Typography color=\"primary\" variant=\"h4\">\n// //                 {questionSetCount}\n// //               </Typography>\n// //             </CardContent>\n// //           </Card>\n// //         </Grid>\n// //         <Grid item xs={12} sm={6} md={3}>\n// //           <Card className={classes.card}>\n// //             <CardContent className={classes.cardContent}>\n// //               <Typography color=\"textSecondary\" variant=\"h6\" gutterBottom>\n// //                 Upcoming Exam\n// //               </Typography>\n// //               <Typography color=\"primary\" variant=\"h4\">\n// //                 {upcomingExam}\n// //               </Typography>\n// //             </CardContent>\n// //           </Card>\n// //         </Grid>\n// //       </Grid>\n// //     );\n// //   }\n\n// // }\n// // export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","makeStyles","Sidebar","Header","Footer","Container","Grid","Card","CardContent","Typography","Table","TableContainer","TableHead","TableRow","TableCell","TableBody","Drawer","jsxDEV","_jsxDEV","drawerWidth","useStyles","theme","root","display","content","flexGrow","padding","spacing","tableContainer","marginTop","card","height","cardContent","justifyContent","drawer","width","flexShrink","drawerPaper","AdminDashboard","_s","classes","students","id","name","age","grade","sidebarOpen","setSidebarOpen","toggleSidebar","className","children","onMenuClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","anchor","open","paper","container","item","xs","md","map","student","_c","$RefreshReg$"],"sources":["C:/Users/sambh/OneDrive/Desktop/Exam-Portal/src/components/AdminDashboard.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Sidebar from './Sidebar';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport { Container, Grid, Card, CardContent, Typography, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, Drawer } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  tableContainer: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n}));\r\n\r\nconst AdminDashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  // Dummy data for table\r\n  const students = [    { id: 1, name: 'John Doe', age: 25, grade: 'A' },    { id: 2, name: 'Jane Smith', age: 22, grade: 'B' },    { id: 3, name: 'Mark Johnson', age: 21, grade: 'C' },    { id: 4, name: 'Anna Brown', age: 24, grade: 'A' },  ];\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header onMenuClick={toggleSidebar} />\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={sidebarOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Sidebar />\r\n      </Drawer>\r\n      <div className={classes.content}>\r\n        <Container>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={8}>\r\n              {/* Table to display students */}\r\n              <TableContainer className={classes.tableContainer}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>ID</TableCell>\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell>Age</TableCell>\r\n                      <TableCell>Grade</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {students.map((student) => (\r\n                      <TableRow key={student.id}>\r\n                        <TableCell>{student.id}</TableCell>\r\n                        <TableCell>{student.name}</TableCell>\r\n                        <TableCell>{student.age}</TableCell>\r\n                        <TableCell>{student.grade}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              {/* Cards to show additional information */}\r\n              <Card className={classes.card}>\r\n                <CardContent className={classes.cardContent}>\r\n                  <div>\r\n                  <Typography variant=\"h6\">Total Exams</Typography>\r\n                    <Typography variant=\"h4\">10</Typography>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n                    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import { makeStyles } from '@material-ui/core/styles';\r\n// // import Sidebar from './Sidebar';\r\n// // import Header from './Header';\r\n// // import Footer from './Footer';\r\n// // import { Container, Grid, Card, CardContent, Typography, Table, TableContainer, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\n// // const useStyles = makeStyles((theme) => ({\r\n// // root: {\r\n// // display: 'flex',\r\n// // },\r\n// // content: {\r\n// // flexGrow: 1,\r\n// // padding: theme.spacing(3),\r\n// // },\r\n// // tableContainer: {\r\n// // marginTop: theme.spacing(3),\r\n// // },\r\n// // card: {\r\n// // height: '100%',\r\n// // },\r\n// // cardContent: {\r\n// // display: 'flex',\r\n// // justifyContent: 'space-between',\r\n// // },\r\n// // }));\r\n\r\n// // const AdminDashboard = () => {\r\n// // const classes = useStyles();\r\n\r\n// // // Dummy data for table\r\n// // const students = [ { id: 1, name: 'John Doe', age: 25, grade: 'A' }, { id: 2, name: 'Jane Smith', age: 22, grade: 'B' }, { id: 3, name: 'Mark Johnson', age: 21, grade: 'C' }, { id: 4, name: 'Anna Brown', age: 24, grade: 'A' }, ];\r\n\r\n// // const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n// // const toggleSidebar = () => {\r\n// // setSidebarOpen(!sidebarOpen);\r\n// // };\r\n\r\n// // return (\r\n// // <div className={classes.root}>\r\n// // <Header onMenuClick={toggleSidebar} />\r\n// // <Sidebar open={sidebarOpen} />\r\n// // <div className={classes.content}>\r\n// // <Container>\r\n// // <Grid container spacing={3}>\r\n// // <Grid item xs={12} md={8}>\r\n// // {/* Table to display students /}\r\n// // <TableContainer className={classes.tableContainer}>\r\n// // <Table>\r\n// // <TableHead>\r\n// // <TableRow>\r\n// // <TableCell>ID</TableCell>\r\n// // <TableCell>Name</TableCell>\r\n// // <TableCell>Age</TableCell>\r\n// // <TableCell>Grade</TableCell>\r\n// // </TableRow>\r\n// // </TableHead>\r\n// // <TableBody>\r\n// // {students.map((student) => (\r\n// // <TableRow key={student.id}>\r\n// // <TableCell>{student.id}</TableCell>\r\n// // <TableCell>{student.name}</TableCell>\r\n// // <TableCell>{student.age}</TableCell>\r\n// // <TableCell>{student.grade}</TableCell>\r\n// // </TableRow>\r\n// // ))}\r\n// // </TableBody>\r\n// // </Table>\r\n// // </TableContainer>\r\n// // </Grid>\r\n// // <Grid item xs={12} md={4}>\r\n// // {/ Cards to show additional information */}\r\n// // <Card className={classes.card}>\r\n// // <CardContent className={classes.cardContent}>\r\n// // <div>\r\n// // <Typography variant=\"h6\">Total Students</Typography>\r\n// // <Typography variant=\"h4\">100</Typography>\r\n// // </div>\r\n// // <div>\r\n// // <Typography variant=\"h6\">Total Exams</Typography>\r\n// // <Typography variant=\"h4\">10</Typography>\r\n// // </div>\r\n// // </CardContent>\r\n// // </Card>\r\n// // </Grid>\r\n// // </Grid>\r\n// // </Container>\r\n// // <Footer />\r\n// // </div>\r\n// // </div>\r\n// // );\r\n// // };\r\n\r\n// // export default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import { makeStyles } from \"@material-ui/core/styles\";\r\n// // import {\r\n// //   Card,\r\n// //   CardContent,\r\n// //   Typography,\r\n// //   Grid,\r\n// //   CircularProgress,\r\n// // } from \"@material-ui/core\";\r\n\r\n// // const useStyles = makeStyles((theme) => ({\r\n// //   root: {\r\n// //     flexGrow: 1,\r\n// //     marginTop: theme.spacing(4),\r\n// //   },\r\n// //   card: {\r\n// //     height: \"100%\",\r\n// //   },\r\n// //   cardContent: {\r\n// //     textAlign: \"center\",\r\n// //   },\r\n// // }));\r\n\r\n// // const AdminDashboard = () => {\r\n// //   const classes = useStyles();\r\n// //   const [isLoading, setIsLoading] = useState(true);\r\n// //   const [enrollmentCount, setEnrollmentCount] = useState(0);\r\n// //   const [questionSetCount, setQuestionSetCount] = useState(0);\r\n// //   const [upcomingExam, setUpcomingExam] = useState(\"\");\r\n// //   const [passCount, setPassCount] = useState(0);\r\n// //   const [failCount, setFailCount] = useState(0);\r\n// //   const [totalCount, setTotalCount] = useState(0);\r\n\r\n// //   useEffect(() => {\r\n// //     // Fetch all the necessary data from the server and update the state\r\n// //     const fetchDashboardData = async () => {\r\n// //       try {\r\n// //         // Example endpoint URLs\r\n// //         const enrollmentCountRes = await fetch(\"/api/enrollment/count\");\r\n// //         const enrollmentCountJson = await enrollmentCountRes.json();\r\n// //         setEnrollmentCount(enrollmentCountJson.count);\r\n\r\n// //         const questionSetCountRes = await fetch(\"/api/questionset/count\");\r\n// //         const questionSetCountJson = await questionSetCountRes.json();\r\n// //         setQuestionSetCount(questionSetCountJson.count);\r\n\r\n// //         const upcomingExamRes = await fetch(\"/api/exam/upcoming\");\r\n// //         const upcomingExamJson = await upcomingExamRes.json();\r\n// //         setUpcomingExam(upcomingExamJson.examDate);\r\n\r\n// //         const examResultsRes = await fetch(\"/api/exam/results\");\r\n// //         const examResultsJson = await examResultsRes.json();\r\n// //         setPassCount(examResultsJson.passCount);\r\n// //         setFailCount(examResultsJson.failCount);\r\n// //         setTotalCount(examResultsJson.totalCount);\r\n\r\n// //         setIsLoading(false);\r\n// //       } catch (err) {\r\n// //         console.error(err);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchDashboardData();\r\n// //   }, []);\r\n\r\n// //   if (isLoading) {\r\n// //     return <CircularProgress />;\r\n// //   } else {\r\n// //     return (\r\n// //       <Grid container spacing={4}>\r\n// //         <Grid item xs={12} sm={6} md={3}>\r\n// //           <Card className={classes.card}>\r\n// //             <CardContent className={classes.cardContent}>\r\n// //               <Typography color=\"textSecondary\" variant=\"h6\" gutterBottom>\r\n// //                 Enrollment Count\r\n// //               </Typography>\r\n// //               <Typography color=\"primary\" variant=\"h4\">\r\n// //                 {enrollmentCount}\r\n// //               </Typography>\r\n// //             </CardContent>\r\n// //           </Card>\r\n// //         </Grid>\r\n// //         <Grid item xs={12} sm={6} md={3}>\r\n// //           <Card className={classes.card}>\r\n// //             <CardContent className={classes.cardContent}>\r\n// //               <Typography color=\"textSecondary\" variant=\"h6\" gutterBottom>\r\n// //                 Question Set Count\r\n// //               </Typography>\r\n// //               <Typography color=\"primary\" variant=\"h4\">\r\n// //                 {questionSetCount}\r\n// //               </Typography>\r\n// //             </CardContent>\r\n// //           </Card>\r\n// //         </Grid>\r\n// //         <Grid item xs={12} sm={6} md={3}>\r\n// //           <Card className={classes.card}>\r\n// //             <CardContent className={classes.cardContent}>\r\n// //               <Typography color=\"textSecondary\" variant=\"h6\" gutterBottom>\r\n// //                 Upcoming Exam\r\n// //               </Typography>\r\n// //               <Typography color=\"primary\" variant=\"h4\">\r\n// //                 {upcomingExam}\r\n// //               </Typography>\r\n// //             </CardContent>\r\n// //           </Card>\r\n// //         </Grid>\r\n// //       </Grid>\r\n// //     );\r\n// //   }\r\n  \r\n// // }\r\n// // export default AdminDashboard;\r\n\r\n\r\n\r\n"],"mappings":"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AAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAChB,EAAA,CAvEID,cAAc;EAAA,QACFlB,SAAS;AAAA;AAAA8C,EAAA,GADrB5B,cAAc;AAyEpB,eAAeA,cAAc;;AA+G7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}